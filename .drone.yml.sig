eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIGJ1aWxkOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHB0dGctaXAtZm0tdWkgLgogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKCiAgdGVzdDoKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBidWlsZCAtZiBEb2NrZXJmaWxlX3Rlc3QgLXQgcHR0Zy1pcC1mbS11aS10ZXN0IC4KICAgICAgLSBkb2NrZXIgcnVuIHB0dGctaXAtZm0tdWktdGVzdAogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKCiAgcHVzaDoKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtwdHRnIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgcHR0Zy1pcC1mbS11aSBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcHR0Zy1pcC1mbS11aTpidWlsZC0ke0RST05FX0JVSUxEX05VTUJFUn0KICAgICAgLSBkb2NrZXIgdGFnIHB0dGctaXAtZm0tdWkgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3B0dGctaXAtZm0tdWk6bGF0ZXN0CiAgICAgIC0gZG9ja2VyIHB1c2ggcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3B0dGctaXAtZm0tdWk6YnVpbGQtJHtEUk9ORV9CVUlMRF9OVU1CRVJ9CiAgICAgIC0gZG9ja2VyIHB1c2ggcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3B0dGctaXAtZm0tdWk6bGF0ZXN0CiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAogICAgICBicmFuY2g6IG1hc3RlcgoKICBnZXQta3ViZS1jb25maWd1cmF0aW9uLWRlcGxveW1lbnQ6CiAgICBpbWFnZTogcGx1Z2lucy9naXQKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL1VLSG9tZU9mZmljZS9rdWJlLXB0dGctaXAtZm0tdWkuZ2l0CiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIGRlcGxveW1lbnRdCiAgICAgIGJyYW5jaDogbWFzdGVyCgogIGRlcGxveS10by1kZXY6CiAgICBpbWFnZTogcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2tkOnYwLjIuMwogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgICAgLSBLVUJFX05BTUVTUEFDRT1wdC1pLWRldgogICAgICAtIEVOVklST05NRU5UPWRldgogICAgICAtIFZFUlNJT049YnVpbGQtJHtEUk9ORV9CVUlMRF9OVU1CRVJ9CiAgICAgIC0gS1VCRV9TRVJWRVJfREVWPWh0dHBzOi8va3ViZS1kZXYuZHNwLm5vdHByb2QuaG9tZW9mZmljZS5nb3YudWsKICAgICAgLSBLVUJFX1NFUlZFUj1odHRwczovL2t1YmUtZGV2LmRzcC5ub3Rwcm9kLmhvbWVvZmZpY2UuZ292LnVrCiAgICBjb21tYW5kczoKICAgICAgLSBjZCBrdWJlLXB0dGctaXAtZm0tdWkKICAgICAgLSAuL2RlcGxveS5zaAogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKICAgICAgYnJhbmNoOiBtYXN0ZXIKCiAgZ2V0LWt1YmUtY29uZmlndXJhdGlvbi1kZXBsb3ltZW50OgogICAgaW1hZ2U6IHBsdWdpbnMvZ2l0CiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9VS0hvbWVPZmZpY2Uva3ViZS1wdHRnLWlwLWZtLXVpLmdpdAogICAgd2hlbjoKICAgICAgZXZlbnQ6IGRlcGxveW1lbnQKCiAgZGVwbG95OgogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9rZDp2MC4yLjIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICAgIC0gS1VCRV9OQU1FU1BBQ0U9c3Bvbi0ke0RST05FX0RFUExPWV9UT30KICAgICAgLSBFTlZJUk9OTUVOVD0ke0RST05FX0RFUExPWV9UT30KICAgICAgLSBWRVJTSU9OPSR7SU1BR0VfVkVSU0lPTn0KICAgICAgLSBLVUJFX1NFUlZFUj1odHRwczovL2t1YmUtZGV2LmRzcC5ub3Rwcm9kLmhvbWVvZmZpY2UuZ292LnVrCiAgICAgIC0gS1VCRV9TRVJWRVJfREVWPWh0dHBzOi8va3ViZS1kZXYuZHNwLm5vdHByb2QuaG9tZW9mZmljZS5nb3YudWsKICAgIGNvbW1hbmRzOgogICAgICAtIGNkIGt1YmUtcHR0Zy1pcC1mbS11aQogICAgICAtIC4vZGVwbG95LnNoCiAgICB3aGVuOgogICAgICBldmVudDogZGVwbG95bWVudAoKCiAgZGVwbG95LXRvLXByb2Q6CiAgICBpbWFnZTogcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2tkOnYwLjIuMwogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgICAgLSBLVUJFX05BTUVTUEFDRT1wdC1pLXByb2QKICAgICAgLSBFTlZJUk9OTUVOVD1wcm9kCiAgICAgIC0gVkVSU0lPTj0ke0lNQUdFX1ZFUlNJT059CiAgICAgIC0gS1VCRV9TRVJWRVI9aHR0cHM6Ly9rdWJlLmRzcC5kaWdpdGFsLmhvbWVvZmZpY2UuZ292LnVrCiAgICBjb21tYW5kczoKICAgICAgLSBjZCBrdWJlLXB0dGctaXAtZm0tdWkKICAgICAgLSAuL2RlcGxveS1wcm9kLnNoCiAgICB3aGVuOgogICAgICBldmVudDogZGVwbG95bWVudAogICAgICBlbnZpcm9ubWVudDogcHJvZAoKc2VydmljZXM6CiAgZGluZDoKICAgIGltYWdlOiBkb2NrZXI6MS4xMS1kaW5kCiAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICBjb21tYW5kOgogICAgICAtICItcyIKICAgICAgLSAib3ZlcmxheSIK.ryYg4FinbKva_WEPF4RkAnE115M1IwHFfqBAhSC5Izo